{"version":3,"file":"token-autocomplete.js","sourceRoot":"","sources":["../lib/token-autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["interface Token {\n    value: string,\n    text: string,\n    type: string | null\n}\n\ninterface Suggestion {\n    id: string | null,\n    value: string,\n    fieldLabel: string,\n    type: string | null,\n    completionLabel: string | null,\n    completionDescription: string | null\n}\n\ninterface Options {\n    name: string,\n    selector: string,\n    noMatchesText: string | null,\n    noMatchesCustomEntriesDescription: string | null,\n    placeholderText: string | null,\n    initialTokens: Array<Token> | null,\n    initialSuggestions: Array<Suggestion> | null,\n    tokenRenderer: TokenRenderer,\n    selectMode: SelectModes,\n    suggestionsUri: string,\n    suggestionsUriBuilder: SuggestionUriBuilder,\n    suggestionRenderer: SuggestionRenderer,\n    minCharactersForSuggestion: number,\n    allowCustomEntries: boolean,\n    readonly: boolean,\n    optional: boolean,\n    enableTabulator: boolean,\n    showSuggestionsOnFocus: boolean,\n    requestDelay: number\n}\n\nenum SelectModes {\n    SINGLE, MULTI, SEARCH\n}\n\ninterface SelectMode {\n    addToken(suggestionValue: string | null, suggestionText: string | null, suggestionType: string | null, silent: boolean): void;\n\n    handleInputAsValue(input: string): void;\n\n    initEventListeners(): void;\n\n    clear(silent: boolean): void;\n\n    clearCurrentInput(): void;\n}\n\ninterface SingleSelect extends SelectMode {\n}\n\ninterface MultiSelect extends SelectMode {\n    removeToken(token: HTMLSpanElement): void;\n\n    removeLastToken(): void;\n\n    removeTokenWithText(textContent: any): void;\n}\n\ninterface Autocomplete {\n    suggestions: any;\n\n    initEventListeners(): void;\n\n    requestSuggestions(value: string): void;\n\n    highlightSuggestionAtPosition(arg0: number): void;\n\n    addSuggestion(suggestion: Suggestion, showSuggestions: boolean): void;\n\n    clearSuggestions(): void;\n\n    showSuggestions(): void;\n\n    hideSuggestions(): void;\n\n    loadSuggestions(): void;\n\n    areSuggestionsDisplayed(): boolean;\n\n    areSuggestionsActive(): boolean;\n\n    highlightSuggestion(arg0: Element): void;\n}\n\ninterface TokenRenderer {\n    (token: Token): HTMLElement;\n}\n\ninterface SuggestionRenderer {\n    (suggestion: Suggestion): HTMLElement;\n}\n\ninterface SuggestionUriBuilder {\n    (query: string): string;\n}\n\nclass TokenAutocomplete {\n\n    KEY_BACKSPACE = 'Backspace';\n    KEY_ENTER = 'Enter';\n    KEY_TAB = 'Tab';\n    KEY_UP = 'ArrowUp';\n    KEY_DOWN = 'ArrowDown';\n    KEY_LEFT = 'ArrowLeft';\n    KEY_RIGHT = 'ArrowRight';\n    KEY_ESC = 'Escape';\n\n    options: Options;\n    container: any;\n    hiddenSelect: HTMLSelectElement;\n    textInput: HTMLSpanElement;\n\n    select: SelectMode;\n    autocomplete: Autocomplete;\n\n    defaults: Options = {\n        name: '',\n        selector: '',\n        noMatchesText: null,\n        noMatchesCustomEntriesDescription: null,\n        placeholderText: 'enter some text',\n        initialTokens: null,\n        initialSuggestions: null,\n        tokenRenderer: TokenAutocomplete.MultiSelect.defaultRenderer,\n        suggestionsUri: '',\n        selectMode: SelectModes.MULTI,\n        suggestionsUriBuilder: function (query) {\n            return this.suggestionsUri + '?query=' + query\n        },\n        suggestionRenderer: TokenAutocomplete.Autocomplete.defaultRenderer,\n        minCharactersForSuggestion: 1,\n        allowCustomEntries: true,\n        readonly: false,\n        optional: false,\n        enableTabulator: true,\n        showSuggestionsOnFocus: true,\n        requestDelay: 200\n    };\n    log: any;\n\n    constructor(options: Options) {\n        this.options = {...this.defaults, ...options};\n\n        let passedContainer = document.querySelector(this.options.selector);\n        if (!passedContainer) {\n            throw new Error('passed selector does not point to a DOM element.');\n        }\n\n        this.container = passedContainer;\n        this.container.classList.add('token-autocomplete-container');\n\n        if (!Array.isArray(this.options.initialTokens) && !Array.isArray(this.options.initialSuggestions)) {\n            this.parseTokensAndSuggestions();\n        }\n\n        this.hiddenSelect = document.createElement('select');\n        this.hiddenSelect.id = this.container.id + '-select';\n        this.hiddenSelect.name = this.options.name;\n        this.hiddenSelect.setAttribute('multiple', 'true');\n        this.hiddenSelect.setAttribute('autocomplete', 'off');\n        this.hiddenSelect.style.display = 'none';\n\n        if (this.options.readonly && this.options.tokenRenderer === TokenAutocomplete.MultiSelect.defaultRenderer) {\n            this.options.tokenRenderer = TokenAutocomplete.MultiSelect.defaultReadonlyRenderer;\n        }\n\n        this.textInput = document.createElement('span');\n        this.textInput.id = this.container.id + '-input';\n        this.textInput.classList.add('token-autocomplete-input');\n        if (!this.options.readonly) {\n            if (this.options.placeholderText != null) {\n                this.textInput.dataset.placeholder = this.options.placeholderText;\n            }\n\n            this.textInput.contentEditable = 'true';\n            this.textInput.addEventListener(\"paste\", function (event) {\n                event.preventDefault();\n                if (event.hasOwnProperty('clipboardData')) {\n                    //  Normal handling for modern browsers\n                    const text = event.clipboardData?.getData(\"text/plain\");\n                    document.execCommand(\"insertHTML\", false, text);\n                } else {\n                    // Fallback logic for IE11\n                    const globalText = window.clipboardData?.getData(\"Text\");\n                    const range = document.getSelection()?.getRangeAt(0);\n                    range?.insertNode(document.createTextNode(globalText));\n                }\n            });\n        } else {\n            this.container.classList.add('token-autocomplete-readonly');\n        }\n        this.container.appendChild(this.textInput);\n\n\n        this.container.appendChild(this.hiddenSelect);\n        this.addHiddenEmptyOption();\n\n        if (this.options.selectMode == SelectModes.MULTI) {\n            this.select = new TokenAutocomplete.MultiSelect(this);\n        } else if (this.options.selectMode == SelectModes.SEARCH) {\n            this.select = new TokenAutocomplete.SearchMultiSelect(this);\n        } else if (this.options.selectMode == SelectModes.SINGLE) {\n            this.hiddenSelect.removeAttribute('multiple');\n            this.select = new TokenAutocomplete.SingleSelect(this);\n        }\n        this.autocomplete = new TokenAutocomplete.Autocomplete(this);\n\n        this.select.initEventListeners();\n        this.autocomplete.initEventListeners();\n\n        this.debug(false);\n\n        if (Array.isArray(this.options.initialTokens)) {\n            this.val(this.options.initialTokens);\n        }\n\n        this.container.tokenAutocomplete = this as TokenAutocomplete;\n\n        if (this.options.selectMode == SelectModes.SINGLE && !this.options.optional && this.val().length == 0) {\n            this.autocomplete.loadSuggestions();\n        }\n    }\n\n    /**\n     * Searches the element given as a container for option elements and creates active tokens (when the option is marked selected)\n     * and suggestions (all options found) from these. During this all found options are removed from the DOM.\n     */\n    parseTokensAndSuggestions() {\n        let initialTokens: Array<Token> = [];\n        let initialSuggestions: Array<Suggestion> = [];\n\n        let options: NodeListOf<HTMLOptionElement> = this.container.querySelectorAll('option');\n\n        let me = this;\n        options.forEach(function (option) {\n            if (option.text != null) {\n                if (option.hasAttribute('selected')) {\n                    initialTokens.push({value: option.value, text: option.text, type: null});\n                }\n                initialSuggestions.push({\n                    id: null,\n                    value: option.value,\n                    fieldLabel: option.text,\n                    type: null,\n                    completionDescription: option.dataset.description || null,\n                    completionLabel: null\n                });\n            }\n            me.container.removeChild(option);\n        });\n\n        if (initialSuggestions.length > 0) {\n            this.options.initialSuggestions = initialSuggestions;\n            if (!this.options.optional && initialTokens.length == 0) {\n                let firstSuggestion = initialSuggestions[0];\n                initialTokens.push({\n                    value: firstSuggestion.value, text: firstSuggestion.fieldLabel, type: firstSuggestion.type\n                });\n            }\n        }\n\n        if (initialTokens.length > 0) {\n            this.options.initialTokens = initialTokens;\n        }\n    }\n\n    /**\n     * Clears the currently present tokens and creates new ones from the given input value, returns new tokens afterwards.\n     *\n     * The current tokens are only overwritten (cleared and added) when a value parameter is given.\n     * In addition to the possibility of setting the value of the input this method also returns the values of all present tokens.\n     *\n     * @param {(Array<Token>|Token)} value - either the name of a single token or a list of tokens to create\n     * @param {boolean} silent - whether appropriate events should be triggered when changing tokens or not\n     *\n     * @returns an array of the values of all current (after update) tokens of the input field\n     */\n    val(value: Array<Token> | Token | null = null, silent: boolean = false): Array<string> {\n        if (typeof value !== 'undefined' && value !== null) {\n            this.select.clear(silent);\n            this.addToken(value, silent);\n        }\n\n        let tokens: Array<string> = [];\n        this.hiddenSelect.querySelectorAll('option').forEach(option => {\n            if (option.dataset.value != null && option.dataset.value !== \"\") {\n                tokens.push(option.dataset.value);\n            }\n        });\n        return tokens;\n    }\n\n\n    /**\n     * Adds the given tokens to the field.\n     *\n     * The current tokens are only added when a value parameter is given.\n     *\n     * @param {(Array<Token>|Token)} value - either the name of a single token or a list of tokens to create\n     * @param {boolean} silent - whether appropriate events should be triggered when changing tokens or not\n     */\n    addToken(value: Array<Token> | Token, silent: boolean = false) {\n        if (Array.isArray(value)) {\n            let me = this;\n            value.forEach(function (token) {\n                if (typeof token === 'object') {\n                    me.select.addToken(token.value, token.text, token.type, silent);\n                }\n            });\n        } else {\n            this.select.addToken(value.value, value.text, value.type, silent);\n        }\n    }\n\n    /**\n     * Returns the current text the user has input which is not converted into a token.\n     */\n    getCurrentInput() {\n        return this.textInput.textContent || '';\n    }\n\n    setCurrentInput(input: string, silent: boolean) {\n        this.textInput.textContent = input;\n\n        if (silent) {\n            return;\n        }\n\n        this.container.dispatchEvent(new CustomEvent('query-changed', {\n            detail: {\n                query: input\n            }\n        }));\n    }\n\n    addHiddenOption(tokenValue: string, tokenText: string, tokenType: string | null, isLiveEntry: boolean = false) {\n        tokenValue = tokenValue.trim();\n        tokenText = tokenText.trim();\n        let _emptyToken = this.hiddenSelect.querySelector('.empty-token');\n        if (_emptyToken) {\n            this.hiddenSelect.removeChild(_emptyToken);\n        }\n        let _existingLiveEntry = this.hiddenSelect.querySelector('.live-entry');\n        if (_existingLiveEntry) {\n            this.hiddenSelect.removeChild(_existingLiveEntry);\n        }\n        let _existingOption = this.findOptionWithValue(tokenValue);\n        if (_existingOption) {\n            this.hiddenSelect.removeChild(_existingOption);\n        }\n        const option = document.createElement('option');\n        option.text = tokenText;\n        option.value = tokenValue;\n        option.selected = true;\n        option.dataset.text = tokenText;\n        option.dataset.value = tokenValue;\n        if (tokenType != null) {\n            option.dataset.type = tokenType;\n        }\n        if (isLiveEntry) {\n            option.classList.add('live-entry');\n        }\n        this.hiddenSelect.add(option);\n    }\n\n    findOptionWithValue(optionValue: string) {\n        for (let i = 0; i < this.hiddenSelect.options.length; i++) {\n            let option = this.hiddenSelect.options[i];\n            if (option.value === optionValue) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    addHiddenEmptyOption() {\n        let _emptyToken = this.hiddenSelect.querySelector('.empty-token');\n        if (_emptyToken) {\n            _emptyToken.setAttribute('selected', 'true');\n        } else {\n            const _newOption = document.createElement('option');\n            _newOption.text = '';\n            _newOption.value = '';\n            _newOption.selected = true;\n            _newOption.classList.add('empty-token');\n            this.hiddenSelect.add(_newOption);\n        }\n    }\n\n    setPlaceholderText(placeholderText: string | undefined) {\n        this.textInput.dataset.placeholder = placeholderText;\n    }\n\n    debug(state: boolean) {\n        if (state) {\n            this.log = console.log.bind(window.console);\n        } else {\n            this.log = function () {\n                // Intentionally left empty to only log when debugging is enabled.\n            }\n        }\n    }\n\n    static MultiSelect = class implements MultiSelect {\n\n        parent: TokenAutocomplete;\n        container: any;\n        options: Options;\n        renderer: TokenRenderer;\n\n        constructor(parent: TokenAutocomplete) {\n            this.parent = parent;\n            this.container = parent.container;\n            this.options = parent.options;\n            this.renderer = parent.options.tokenRenderer;\n        }\n\n        clearCurrentInput(): void {\n            this.parent.textInput.textContent = '';\n        }\n\n        initEventListeners(): void {\n            const me = this;\n            const parent = this.parent;\n            if (parent.options.readonly) {\n                return;\n            }\n\n            parent.textInput.addEventListener('compositionend', function (event) {\n                // handles hitting ENTER on GBoard, which uses composition events instead of individual key triggers\n                let inputString = event.data;\n                if (inputString.charAt(inputString.length - 1) === \"\\n\") {\n                    event.preventDefault();\n                    me.handleInput(parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted'));\n                }\n            })\n\n            parent.textInput.addEventListener('keydown', function (event) {\n                if (event.key == parent.KEY_ENTER || (event.key == parent.KEY_TAB && parent.options.enableTabulator)) {\n                    event.preventDefault();\n\n                    let highlightedSuggestion = parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n\n                    if (parent.options.enableTabulator && highlightedSuggestion == null && event.key == parent.KEY_TAB && parent.autocomplete.areSuggestionsDisplayed()) {\n                        highlightedSuggestion = parent.autocomplete.suggestions.firstChild;\n                    }\n\n                    me.handleInput(highlightedSuggestion);\n                } else if (parent.getCurrentInput() === '' && event.key == parent.KEY_BACKSPACE) {\n                    event.preventDefault();\n                    me.removeLastToken();\n                }\n                if ((event.key == parent.KEY_DOWN || event.key == parent.KEY_UP) && parent.autocomplete.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        handleInput(highlightedSuggestion: any): void {\n            if (highlightedSuggestion !== null) {\n                this.clearCurrentInput();\n                if (highlightedSuggestion.classList.contains('token-autocomplete-suggestion-active')) {\n                    this.removeTokenWithText(highlightedSuggestion.dataset.tokenText);\n                } else {\n                    this.addToken(highlightedSuggestion.dataset.value, highlightedSuggestion.dataset.tokenText, highlightedSuggestion.dataset.type, false);\n                }\n            } else {\n                this.handleInputAsValue(this.parent.getCurrentInput());\n            }\n            this.parent.autocomplete.clearSuggestions();\n            this.parent.autocomplete.hideSuggestions();\n        }\n\n        /**\n         * Adds the current user input as a net token and resets the input area so new text can be entered.\n         *\n         * @param {string} input - the actual input the user entered\n         */\n        handleInputAsValue(input: string): void {\n            if (input != '' && this.parent.options.allowCustomEntries) {\n                this.clearCurrentInput();\n                this.addToken(input, input, null);\n                return;\n            }\n            if (this.parent.autocomplete.suggestions.childNodes.length === 1 && this.parent.autocomplete.suggestions.childNodes[0].dataset.value != '_no_match_') {\n                this.parent.autocomplete.suggestions.firstChild.click();\n            } else {\n                this.clearCurrentInput();\n            }\n        }\n\n        /**\n         * Adds a token with the specified name to the list of currently present tokens displayed to the user and the hidden select.\n         *\n         * @param {string} tokenValue - the actual value of the token to create\n         * @param {string} tokenText - the name of the token to create\n         * @param {string} tokenType - the type of the token to create\n         * @param {boolean} silent - whether an appropriate event should be triggered\n         */\n        addToken(tokenValue: string | null, tokenText: string | null, tokenType: string | null, silent: boolean = false) {\n            if (tokenValue === null || tokenText === null || tokenValue === '_no_match_') {\n                return;\n            }\n\n            tokenValue = tokenValue.trim();\n            tokenText = tokenText.trim();\n\n            this.parent.addHiddenOption(tokenValue, tokenText, tokenType);\n\n            let addedToken = {\n                value: tokenValue,\n                text: tokenText,\n                type: tokenType\n            };\n\n            let element = this.renderer(addedToken);\n\n            let me = this;\n            element.querySelector('.token-autocomplete-token-delete')?.addEventListener('click', function () {\n                me.removeToken(element);\n            });\n\n            this.container.insertBefore(element, this.parent.textInput);\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        added: addedToken\n                    }\n                }));\n            }\n\n            this.parent.log('added token', addedToken);\n        }\n\n        /**\n         * Completely clears the currently present tokens from the field.\n         */\n        clear(silent: boolean = false) {\n            let tokens: NodeListOf<HTMLElement> = this.container.querySelectorAll('.token-autocomplete-token');\n\n            let me = this;\n            tokens.forEach(function (token) {\n                me.removeToken(token, silent);\n            });\n        }\n\n        /**\n         * Removes the last token in the list of currently present token. This is the last added token next to the input field.\n         */\n        removeLastToken() {\n            let tokens = this.container.querySelectorAll('.token-autocomplete-token');\n            let token = tokens[tokens.length - 1];\n            if (token) {\n                this.removeToken(token);\n            }\n        }\n\n        /**\n         * Removes the specified token from the list of currently present tokens.\n         *\n         * @param {Element} token - the token to remove\n         * @param {boolean} silent - whether an appropriate event should be triggered\n         */\n        removeToken(token: HTMLElement, silent: boolean = false) {\n            this.container.removeChild(token);\n\n            let tokenText = token.dataset.text;\n            let hiddenOption = this.parent.hiddenSelect.querySelector('option[data-text=\"' + TokenAutocomplete.escapeQuotes(tokenText) + '\"]');\n            hiddenOption?.parentElement?.removeChild(hiddenOption);\n\n            let addedToken = {\n                value: token.dataset.value,\n                text: tokenText,\n                type: token.dataset.type || null\n            };\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        removed: addedToken\n                    }\n                }));\n            }\n\n            if (this.parent.val().length === 0) {\n                this.parent.addHiddenEmptyOption();\n            }\n\n            this.parent.log('removed token', token.textContent);\n        }\n\n        removeTokenWithText(tokenText: string | null) {\n            if (tokenText === null) {\n                return;\n            }\n            let token = this.container.querySelector('.token-autocomplete-token[data-text=\"' + TokenAutocomplete.escapeQuotes(tokenText) + '\"]');\n            if (token !== null) {\n                this.removeToken(token);\n            }\n        }\n\n        static defaultRenderer: TokenRenderer = function (token: Token): HTMLElement {\n            const chip = document.createElement('span');\n            chip.classList.add('token-autocomplete-token');\n            chip.dataset.text = token.text;\n            chip.dataset.value = token.value;\n            if (token.type != null) {\n                chip.dataset.type = token.type;\n            }\n            chip.textContent = token.text;\n\n            let deleteToken = document.createElement('span');\n            deleteToken.classList.add('token-autocomplete-token-delete');\n            deleteToken.textContent = '\\u00D7';\n            chip.appendChild(deleteToken);\n\n            return chip;\n        }\n\n        static defaultReadonlyRenderer: TokenRenderer = function (token: Token): HTMLElement {\n            const chip = document.createElement('span');\n            chip.classList.add('token-autocomplete-token');\n            chip.dataset.text = token.text;\n            chip.dataset.value = token.value;\n            if (token.type != null) {\n                chip.dataset.type = token.type;\n            }\n            chip.textContent = token.text;\n\n            return chip;\n        }\n    }\n\n    static SingleSelect = class implements SingleSelect {\n\n        parent: TokenAutocomplete;\n        container: any;\n        options: Options;\n        renderer: TokenRenderer;\n        previousValue: any;\n        previousText: any;\n        previousType: any;\n\n        constructor(parent: TokenAutocomplete) {\n            this.parent = parent;\n            this.container = parent.container;\n            this.options = parent.options;\n\n            this.container.classList.add('token-autocomplete-singleselect');\n            this.parent.textInput.tabIndex = 0;\n            if (this.options.optional) {\n                let deleteToken = document.createElement('span');\n                deleteToken.classList.add('token-singleselect-token-delete');\n                deleteToken.textContent = '\\u00D7';\n                this.container.appendChild(deleteToken);\n            }\n        }\n\n        /**\n         * Clears the current user input so new text can be entered.\n         *\n         * @param {boolean} silent - whether an appropriate event should be triggered\n         * @param {boolean} keepPreviousValue - if true, the previous value will be stored and shown as a placeholder\n         */\n        clear(silent: boolean, keepPreviousValue = true): void {\n            if (this.options.readonly) {\n                return;\n            }\n            let me = this;\n            let tokenText = me.parent.textInput.textContent;\n            let hiddenOption = me.parent.hiddenSelect.querySelector('option[data-text=\"' + TokenAutocomplete.escapeQuotes(tokenText) + '\"]') as HTMLElement;\n            if (me.options.optional) {\n                this.container.classList.remove('optional-singleselect-with-value');\n            }\n            if (keepPreviousValue) {\n                me.previousValue = hiddenOption?.dataset.value;\n                me.previousText = hiddenOption?.dataset.text;\n                me.previousType = hiddenOption?.dataset.type;\n                if (hiddenOption == null && me.options.allowCustomEntries) {\n                    me.previousValue = tokenText;\n                    me.previousText = tokenText;\n                }\n                if (me.previousText && me.previousText !== '') {\n                    me.parent.textInput.dataset.placeholder = me.previousText;\n                }\n            } else {\n                // We should reset these fields, so they are not used to restore the previously selected value\n                // when the focusout event is handled after the click event on the suggestion.\n                delete me.previousValue;\n                delete me.previousText;\n                delete me.previousType;\n                if (me.parent.options.placeholderText != null) {\n                    me.parent.textInput.dataset.placeholder = me.parent.options.placeholderText;\n                }\n            }\n            hiddenOption?.parentElement?.removeChild(hiddenOption);\n            me.parent.addHiddenEmptyOption();\n            me.parent.textInput.textContent = '';\n            me.parent.textInput.contentEditable = 'true';\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                    }\n                }));\n            }\n        }\n\n        /**\n         * Adds the current user input as a net token and resets the input area so new text can be entered.\n         *\n         * @param {string} input - the actual input the user entered\n         */\n        handleInputAsValue(input: string): void {\n            if (input != '' && this.parent.options.allowCustomEntries) {\n                this.clearCurrentInput();\n                this.addToken(input, input, null, false);\n                this.parent.autocomplete.clearSuggestions();\n                this.parent.autocomplete.hideSuggestions();\n                return;\n            }\n            if (this.parent.autocomplete.suggestions.childNodes.length === 1 && this.parent.autocomplete.suggestions.childNodes[0].dataset.value != '_no_match_') {\n                this.parent.autocomplete.suggestions.firstChild.click();\n                return;\n            }\n            this.clear(true, false);\n        }\n\n        clearCurrentInput(): void {\n            this.clear(true);\n        }\n\n        addToken(tokenValue: string | null, tokenText: string | null, tokenType: string | null, silent: boolean): void {\n            if (tokenValue === null || tokenText === null || tokenValue === '_no_match_') {\n                return;\n            }\n\n            tokenValue = tokenValue.trim();\n            tokenText = tokenText.trim();\n\n            this.clear(true, false);\n            this.parent.textInput.textContent = tokenText;\n            this.parent.textInput.contentEditable = 'false';\n            this.parent.textInput.blur();\n            if (this.options.optional && tokenText !== '') {\n                this.container.classList.add('optional-singleselect-with-value');\n            }\n\n            this.parent.addHiddenOption(tokenValue, tokenText, tokenType);\n\n            if (!silent) {\n                this.container.dispatchEvent(new CustomEvent('tokens-changed', {\n                    detail: {\n                        tokens: this.parent.val(),\n                        added: {\n                            value: tokenValue,\n                            text: tokenText,\n                            type: tokenType\n                        }\n                    }\n                }));\n            }\n        }\n\n        initEventListeners(): void {\n            const me = this;\n            const parent = this.parent;\n            if (parent.options.readonly) {\n                return;\n            }\n\n            parent.textInput.addEventListener('compositionend', function (event) {\n                // handles hitting ENTER on GBoard, which uses composition events instead of individual key triggers\n                let inputString = event.data;\n                if (inputString.charAt(inputString.length - 1) === \"\\n\") {\n                    event.preventDefault();\n                    me.handleInput(parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted'));\n                }\n            })\n\n            parent.textInput.addEventListener('keydown', function (event) {\n                if (event.key == parent.KEY_ENTER || (event.key == parent.KEY_TAB && parent.options.enableTabulator)) {\n                    event.preventDefault();\n\n                    let highlightedSuggestion = parent.autocomplete.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n\n                    if (parent.options.enableTabulator && highlightedSuggestion == null && event.key == parent.KEY_TAB && parent.autocomplete.areSuggestionsDisplayed()) {\n                        highlightedSuggestion = parent.autocomplete.suggestions.firstChild;\n                    }\n\n                    me.handleInput(highlightedSuggestion);\n                }\n                if ((event.key == parent.KEY_DOWN || event.key == parent.KEY_UP) && parent.autocomplete.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                }\n            });\n\n            if (parent.options.allowCustomEntries) {\n                parent.textInput.addEventListener('keyup', function (event) {\n                    if (event.key != parent.KEY_ENTER && event.key != parent.KEY_TAB && event.key != parent.KEY_DOWN && event.key != parent.KEY_UP) {\n                        event.preventDefault();\n                        parent.addHiddenOption(parent.getCurrentInput(), parent.getCurrentInput(), null, true);\n                    }\n                });\n            }\n\n            function focusInput() {\n                if (!parent.autocomplete.areSuggestionsDisplayed() && parent.options.showSuggestionsOnFocus) {\n                    parent.autocomplete.showSuggestions();\n                    parent.autocomplete.loadSuggestions();\n                }\n                // move the cursor into the editable div\n                const selection = window.getSelection();\n                const range = document.createRange();\n                selection?.removeAllRanges();\n                range.selectNodeContents(parent.textInput);\n                range.collapse(false);\n                selection?.addRange(range);\n                parent.textInput.focus();\n            }\n\n            parent.textInput.addEventListener('click', function () {\n                focusInput();\n            });\n\n            parent.textInput.addEventListener('focusout', function () {\n                // Using setTimeout here seems hacky on first sight but ensures proper order of events / handling.\n                // We first want to handle a click on a suggestion (when one is made) before hiding the suggestions on focusout of the input.\n                // Not doing so could mean the suggestion is hidden before the click is handled und thus resulting in not being selected.\n                // This depends on the order in which a browser handles different events and when it sets the active pseudo-selector on clicked events (Firefox for example)\n                setTimeout(function () {\n                    if (parent.autocomplete.areSuggestionsActive()) {\n                        return;\n                    }\n                    const input = me.parent.getCurrentInput();\n                    if (me.parent.val().length !== 0 && me.parent.val()[0] !== '') {\n                        return;\n                    }\n                    if (input != '') {\n                        me.handleInputAsValue(input);\n                        return;\n                    }\n                    if (me.previousValue) {\n                        me.addToken(me.previousValue, me.previousText, me.previousType, true);\n                    }\n                }, 0);\n\n            });\n            parent.container.querySelector('.token-singleselect-token-delete')?.addEventListener('click', function () {\n                me.clear(false, false);\n            });\n        }\n\n        handleInput(highlightedSuggestion: any): void {\n            if (highlightedSuggestion !== null) {\n                this.addToken(highlightedSuggestion.dataset.value, highlightedSuggestion.dataset.tokenText, highlightedSuggestion.dataset.type, false);\n            } else {\n                this.handleInputAsValue(this.parent.getCurrentInput());\n            }\n            this.parent.autocomplete.clearSuggestions();\n            this.parent.autocomplete.hideSuggestions();\n        }\n    }\n\n    static SearchMultiSelect = class extends TokenAutocomplete.MultiSelect {\n        /**\n         * Instead of adding the custom user input as a token and handling it as a filter we let it remain in the input\n         * area and instead send an event so the user search request can be handled / executed.\n         *\n         * @param {string} input - the actual input the user entered\n         */\n        handleInputAsValue(input: string) {\n            this.container.dispatchEvent(new CustomEvent('query-changed', {\n                detail: {\n                    query: input\n                }\n            }));\n        }\n    }\n\n    static Autocomplete = class implements Autocomplete {\n\n        parent: TokenAutocomplete;\n        container: any;\n        options: Options;\n        suggestions: HTMLUListElement;\n        renderer: SuggestionRenderer;\n        request: XMLHttpRequest | null;\n        timeout: number | undefined;\n\n        constructor(parent: TokenAutocomplete) {\n            this.parent = parent;\n            this.container = parent.container;\n            this.options = parent.options;\n            this.renderer = parent.options.suggestionRenderer;\n\n            this.suggestions = document.createElement('ul');\n            this.suggestions.id = this.container.id + '-suggestions';\n            this.suggestions.classList.add('token-autocomplete-suggestions');\n\n            this.container.appendChild(this.suggestions);\n        }\n\n        initEventListeners() {\n            let me = this;\n            if (me.parent.options.readonly) {\n                return;\n            }\n            me.parent.textInput.addEventListener('keyup', function (event) {\n                if (event.key == me.parent.KEY_ESC) {\n                    me.hideSuggestions();\n                    me.parent.textInput.blur();\n                    return;\n                }\n                if (event.key == me.parent.KEY_UP && me.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                    let highlightedSuggestion = me.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n                    if (highlightedSuggestion == null) {\n                        // highlight last entry and scroll to bottom\n                        me.highlightSuggestionAtPosition(me.suggestions.childNodes.length - 1);\n                        me.suggestions.scrollTop = me.suggestions.scrollHeight;\n                        return;\n                    }\n                    let aboveSuggestion = highlightedSuggestion.previousSibling;\n                    if (aboveSuggestion != null) {\n                        // if the suggestions is above the scroll position, scroll to the suggestion\n                        let suggestionTop = (aboveSuggestion as HTMLElement).offsetTop;\n                        if (me.suggestions.scrollTop > suggestionTop) {\n                            me.suggestions.scrollTop = suggestionTop;\n                        }\n                        me.highlightSuggestion(aboveSuggestion as Element);\n                    } else {\n                        highlightedSuggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n                    }\n                    return;\n                }\n                if (event.key == me.parent.KEY_DOWN && me.suggestions.childNodes.length > 0) {\n                    event.preventDefault();\n                    let highlightedSuggestion = me.suggestions.querySelector('.token-autocomplete-suggestion-highlighted');\n                    if (highlightedSuggestion == null) {\n                        // highlight first entry and scroll to top\n                        me.highlightSuggestionAtPosition(0);\n                        me.suggestions.scrollTop = 0;\n                        return;\n                    }\n                    let belowSuggestion = highlightedSuggestion?.nextSibling;\n                    if (belowSuggestion != null) {\n                        // if the suggestions is not completely visible, scroll until the suggestion is at the bottom\n                        let suggestionBottom = (belowSuggestion as HTMLElement).offsetTop + (belowSuggestion as HTMLElement).offsetHeight;\n                        if (me.suggestions.scrollTop + me.suggestions.clientHeight < suggestionBottom) {\n                            me.suggestions.scrollTop = suggestionBottom - me.suggestions.clientHeight;\n                        }\n                        me.highlightSuggestion(belowSuggestion as Element);\n                    } else {\n                        highlightedSuggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n                    }\n                    return;\n                }\n                if (event.key == me.parent.KEY_LEFT || event.key == me.parent.KEY_RIGHT || event.key == me.parent.KEY_ENTER || event.key == me.parent.KEY_TAB) {\n                    // We don't want to re-trigger the autocompletion when the user navigates the cursor inside the input.\n                    return;\n                }\n                me.loadSuggestions();\n            });\n            me.parent.textInput.addEventListener('focusout', function () {\n                // Using setTimeout here seems hacky on first sight but ensures proper order of events / handling.\n                // We first want to handle a click on a suggestion (when one is made) before hiding the suggestions on focusout of the input.\n                // Not doing so could mean the suggestion is hidden before the click is handled und thus resulting in not being selected.\n                // This depends on the order in which a browser handles different events and when it sets the active pseudo-selector on clicked events (Firefox for example)\n                setTimeout(function () {\n                    if (me.areSuggestionsActive()) {\n                        return;\n                    }\n                    me.hideSuggestions();\n                }, 0);\n            });\n            me.parent.textInput.addEventListener('focusin', function () {\n                if (me.options.showSuggestionsOnFocus) {\n                    me.loadSuggestions();\n                }\n            });\n        }\n\n        loadSuggestions() {\n            let me = this;\n            let value = me.parent.getCurrentInput();\n\n            if (me.parent.options.selectMode == SelectModes.SINGLE) {\n                if (!me.parent.textInput.isContentEditable) {\n                    me.parent.select.clear(true);\n                    value = \"\";\n                }\n            } else if (value.length < me.parent.options.minCharactersForSuggestion) {\n                me.clearSuggestions();\n                me.hideSuggestions();\n                return;\n            }\n            if (me.parent.options.suggestionsUri.length > 0) {\n                me.requestSuggestions(value);\n                return;\n            }\n            if (Array.isArray(me.parent.options.initialSuggestions)) {\n                me.clearSuggestions();\n                me.parent.options.initialSuggestions.forEach(function (suggestion) {\n                    if (typeof suggestion !== 'object') {\n                        // The suggestion is of wrong type and therefore ignored.\n                        return;\n                    }\n                    let text = suggestion.fieldLabel;\n                    if (value.length == 0 && me.options.selectMode == SelectModes.SINGLE && !me.options.optional && !me.areSuggestionsDisplayed()) {\n                        me.addSuggestion(suggestion, false);\n                    } else if (value.localeCompare(text.slice(0, value.length), undefined, {sensitivity: 'base'}) === 0) {\n                        // The suggestion starts with the query text the user entered and will be displayed.\n                        me.addSuggestion(suggestion);\n                    }\n                });\n                if (me.suggestions.childNodes.length == 0) {\n                    if (me.parent.options.allowCustomEntries && me.parent.options.noMatchesCustomEntriesDescription) {\n                        me.addSuggestion({\n                            id: null,\n                            value: value,\n                            fieldLabel: value,\n                            type: '_no_match_',\n                            completionDescription: me.parent.options.noMatchesCustomEntriesDescription,\n                            completionLabel: null\n                        });\n\n                    } else if (me.parent.options.noMatchesText) {\n                        me.addSuggestion({\n                            id: null,\n                            value: '_no_match_',\n                            fieldLabel: me.parent.options.noMatchesText,\n                            type: '_no_match_',\n                            completionDescription: null,\n                            completionLabel: null\n                        });\n                    }\n                }\n            }\n        }\n\n        /**\n         * Hides the suggestions dropdown from the user.\n         */\n        hideSuggestions() {\n            // as the suggestions will be re-shown if a pending request is executed, we abort them if we want to hide\n            this.abortPendingRequest();\n            this.suggestions.style.display = '';\n\n            let _highlightedSuggestions = this.suggestions.querySelectorAll('li.token-autocomplete-suggestion-highlighted');\n            _highlightedSuggestions.forEach(function (_suggestion) {\n                _suggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n            })\n        }\n\n        /**\n         * Shows the suggestions dropdown to the user.\n         */\n        showSuggestions() {\n            this.suggestions.style.display = 'block';\n        }\n\n        areSuggestionsDisplayed() {\n            return this.suggestions.style.display === 'block';\n        }\n\n        highlightSuggestionAtPosition(index: number) {\n            let _suggestions = this.suggestions.querySelectorAll('li');\n            _suggestions.forEach(function (_suggestion) {\n                _suggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n            })\n            _suggestions[index].classList.add('token-autocomplete-suggestion-highlighted');\n        }\n\n        highlightSuggestion(_suggestion: Element) {\n            this.suggestions.querySelectorAll('li.token-autocomplete-suggestion-highlighted').forEach(function (_highlightedSuggestion) {\n                _highlightedSuggestion.classList.remove('token-autocomplete-suggestion-highlighted');\n            })\n            _suggestion.classList.add('token-autocomplete-suggestion-highlighted');\n        }\n\n        /**\n         * Checks for the presence of a suggestion that is currently clicked via mouse (active).\n         */\n        areSuggestionsActive() {\n            return !!this.suggestions.querySelector('li:active');\n        }\n\n        /**\n         * Removes all previous suggestions from the dropdown.\n         */\n        clearSuggestions() {\n            this.abortPendingRequest();\n            this.suggestions.innerHTML = '';\n        }\n\n        /**\n         * Aborts currently in progress or scheduled suggestions requests.\n         */\n        abortPendingRequest() {\n            this.request?.abort();\n            clearTimeout(this.timeout);\n        }\n\n        /**\n         * Loads suggestions matching the given query from the rest service behind the URI given as an option while initializing the field.\n         *\n         * @param query the query to search suggestions for\n         */\n        requestSuggestions(query: string) {\n            let me = this;\n            clearTimeout(me.timeout);\n            if (!me.timeout) {\n                me.debouncedRequestSuggestions.call(me, query);\n                me.timeout = window.setTimeout(function () {\n                    delete me.timeout;\n                }, me.parent.options.requestDelay);\n            } else {\n                me.timeout = window.setTimeout(function () {\n                    delete me.timeout;\n                    me.debouncedRequestSuggestions.call(me, query);\n                }, me.parent.options.requestDelay);\n            }\n        }\n\n\n        debouncedRequestSuggestions(query: string) {\n            let me = this;\n\n            if (me.request != null && me.request.readyState) {\n                me.request.abort();\n            }\n\n            me.request = new XMLHttpRequest();\n            me.request.onload = function () {\n                me.request = null;\n\n                me.clearSuggestions();\n\n                let answer = this.response;\n                // IE 11 doesn't properly respect content type header, need to parse json string by hand.\n                if (typeof answer === 'string') {\n                    answer = JSON.parse(answer);\n                }\n\n                if (Array.isArray(answer.completions)) {\n                    if (me.parent.val().length == 0 && answer.completions.length > 0 && me.options.selectMode == SelectModes.SINGLE && !me.options.optional && !me.areSuggestionsDisplayed()) {\n                        answer.completions.forEach(function (suggestion: Suggestion) {\n                            me.addSuggestion(suggestion, false);\n                        });\n                        let firstSuggestion = answer.completions[0] as Suggestion;\n                        let value = firstSuggestion.id || firstSuggestion.value;\n                        me.parent.select.addToken(value, firstSuggestion.fieldLabel, firstSuggestion.type, true);\n                        return;\n                    }\n                    answer.completions.forEach(function (suggestion: Suggestion) {\n                        me.addSuggestion(suggestion);\n                    });\n                    if (me.suggestions.childNodes.length == 0) {\n                        if (me.parent.options.allowCustomEntries && me.parent.options.noMatchesCustomEntriesDescription) {\n                            me.addSuggestion({\n                                id: null,\n                                value: query,\n                                fieldLabel: query,\n                                type: '_no_match_',\n                                completionDescription: me.parent.options.noMatchesCustomEntriesDescription,\n                                completionLabel: null\n                            });\n\n                        } else if (me.parent.options.noMatchesText) {\n                            me.addSuggestion({\n                                id: null,\n                                value: '_no_match_',\n                                fieldLabel: me.parent.options.noMatchesText,\n                                type: '_no_match_',\n                                completionDescription: null,\n                                completionLabel: null\n                            });\n                        }\n                    }\n                }\n            };\n            let suggestionsUri = me.options.suggestionsUriBuilder(query);\n            me.request.open('GET', suggestionsUri, true);\n            me.request.responseType = 'json';\n            me.request.setRequestHeader('Content-type', 'application/json');\n            me.request.send();\n        }\n\n        /**\n         * Adds a suggestion with the given text matching the users input to the dropdown.\n         *\n         * @param {string} suggestion - the metadata of the suggestion that should be added\n         * @param showSuggestions - if the suggestions box should be shown, default true\n         */\n        addSuggestion(suggestion: Suggestion, showSuggestions = true) {\n            let element = this.renderer(suggestion);\n\n            let value = suggestion.id || suggestion.value;\n            let text = suggestion.completionLabel || suggestion.fieldLabel;\n\n            element.dataset.value = value;\n            element.dataset.text = text;\n            element.dataset.tokenText = suggestion.fieldLabel;\n            if (suggestion.type != null) {\n                element.dataset.type = suggestion.type;\n            }\n\n            let me = this;\n            element.addEventListener('click', function (_event: Event) {\n                if (value == '_no_match_') {\n                    return;\n                }\n                if (me.parent.options.selectMode == SelectModes.SINGLE) {\n                    if (element.classList.contains('token-autocomplete-suggestion-active')) {\n                        me.parent.select.clear(false);\n                    } else {\n                        me.parent.select.addToken(value, suggestion.fieldLabel, suggestion.type, false);\n                    }\n                } else {\n                    me.parent.select.clearCurrentInput();\n                    if (element.classList.contains('token-autocomplete-suggestion-active')) {\n                        let multiSelect = me.parent.select as MultiSelect;\n                        multiSelect.removeTokenWithText(suggestion.fieldLabel);\n                    } else {\n                        me.parent.select.addToken(value, suggestion.fieldLabel, suggestion.type, false);\n                    }\n                }\n                me.clearSuggestions();\n                me.hideSuggestions();\n            });\n\n            if (this.container.querySelector('.token-autocomplete-token[data-value=\"' + value + '\"]') !== null) {\n                element.classList.add('token-autocomplete-suggestion-active');\n            }\n\n            this.suggestions.appendChild(element);\n            if (showSuggestions) {\n                this.showSuggestions();\n            }\n\n            me.parent.log('added suggestion', suggestion);\n        }\n\n        static defaultRenderer: SuggestionRenderer = function (suggestion: Suggestion): HTMLElement {\n            let option = document.createElement('li');\n            option.textContent = suggestion.completionLabel || suggestion.fieldLabel;\n\n            if (suggestion.completionDescription) {\n                let description = document.createElement('small');\n                description.textContent = suggestion.completionDescription;\n                description.classList.add('token-autocomplete-suggestion-description');\n                option.appendChild(description);\n            }\n\n            return option;\n        }\n    }\n\n    static escapeQuotes(text: string | null | undefined): string {\n        return text?.replace(/\\x22/g, '\\\\\\x22') ?? '';\n    }\n}\n"]}