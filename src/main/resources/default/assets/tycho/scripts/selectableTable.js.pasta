sirius.ready(function () {
    // FireFox Fix: If a checkbox has been checked and someone refreshes the page, that checkbox is still checked
    // without triggering a change event. Therefore, we are manually clearing all checkboxes on page load.
    document.querySelectorAll('.select-table-row-checkbox-js:checked').forEach(function (_checkbox) {
        _checkbox.checked = false;
    });
    document.querySelectorAll('.select-all-visible-table-rows-checkbox-js:checked').forEach(function (_selectAllCheckbox) {
        _selectAllCheckbox.checked = false;
    });

    document.querySelectorAll('.select-all-visible-table-rows-checkbox-js').forEach(function (_selectAllCheckbox) {
        const _table = _selectAllCheckbox.closest('table');
        // Handle changing the state of the select-all checkbox found in the table head row
        _selectAllCheckbox.addEventListener('change', function () {
            toggleSelectAllCheckboxTitle(_selectAllCheckbox);
            _table.querySelectorAll('.select-table-row-checkbox-js').forEach(_checkbox => {
                _checkbox.checked = _selectAllCheckbox.checked;
                toggleRowSelection(_checkbox);
            });
        });

        _table.querySelectorAll('.select-table-row-checkbox-js').forEach(function (_checkbox) {
            // Handle changing the state of the select-all checkbox found in the table head row
            // When all rows are selected, the select-all checkbox should be checked as well
            _checkbox.addEventListener('change', function () {
                toggleRowSelection(_checkbox);
                changeSelectAllCheckboxState(_table);
            });

            const _row = _checkbox.closest('tr');
            // Handle clicks on the row for convenience
            _row.addEventListener('click', function (event) {
                if (event.target.tagName.toLowerCase() !== 'input' &&
                    event.target.tagName.toLowerCase() !== 'a' &&
                    event.target.tagName.toLowerCase() !== 'button') {
                    _checkbox.checked = !_checkbox.checked;
                    _checkbox.dispatchEvent(new Event('change'));
                }
            });

        });
    });

    function toggleRowSelection(_checkbox) {
        const _row = _checkbox.closest('tr');
        if (_checkbox.checked) {
            _checkbox.title = "___i18n('selectableTable.row.deselection')";
            _row.classList.add('bg-sirius-blue-faint');
        } else {
            _checkbox.title = "___i18n('selectableTable.row.selection')";
            _row.classList.remove('bg-sirius-blue-faint');
        }
    }

    function toggleSelectAllCheckboxTitle(_selectAllCheckbox) {
        if (_selectAllCheckbox.checked) {
            _selectAllCheckbox.title = "___i18n('selectableTable.all.deselection')";
        } else {
            _selectAllCheckbox.title = "___i18n('selectableTable.all.selection')";
        }
    }

    function changeSelectAllCheckboxState(_table) {
        const allChecked = _table.querySelectorAll('.select-table-row-checkbox-js:checked').length === _table.querySelectorAll('.select-table-row-checkbox-js').length;
        _table.querySelectorAll('.select-all-visible-table-rows-checkbox-js').forEach(_selectAllCheckbox => {
            _selectAllCheckbox.checked = allChecked;
            toggleSelectAllCheckboxTitle(_selectAllCheckbox);
        });
    }
});
