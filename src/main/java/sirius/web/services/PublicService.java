/*
 * Made with all the love in the world
 * by scireum in Remshalden, Germany
 *
 * Copyright by scireum GmbH
 * http://www.scireum.de - info@scireum.de
 */

package sirius.web.services;

import sirius.web.security.MaintenanceInfo;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Marks a public API and specifies which format will be generated.
 * <p>
 * Public services are reported as part of the public API ({@link PublicServices}, {@link ApiController}). If the
 * service is only used internally, consider using {@link InternalService}.
 * <p>
 * This annotation can be placed next to a {@link sirius.web.controller.Routed} annotation to mark it as service
 * call. If this annotation is present and {@link Format#JSON} is selected, the method must accept
 * {@link JSONStructuredOutput} as 2nd parameter.  If this annotation is present and {@link Format#XML} is selected,
 * the method must accept {@link sirius.kernel.xml.XMLStructuredOutput} as 2nd parameter. For both outputs, the
 * methods <tt>beginResult</tt> and <tt>endResult</tt> will be called automatically.
 * <p>
 * If the method throws an exception, a response in the appropriate format will be created.
 * Use {@link sirius.web.controller.Controller#ERROR_CODE} and {@link sirius.web.controller.Controller#HTTP_STATUS}
 * to specify a custom error code, or the HTTP status to return
 * (via {@link sirius.kernel.health.Exceptions.ErrorHandler#hint(sirius.kernel.health.ExceptionHint, Object)}).
 * <p>
 * Note that all parameters which are expected or accepted by this service should be described using a
 * {@link io.swagger.v3.oas.annotations.Parameter} annotation for each one.
 * <p>
 * If an API is considered deprecated and should not be used anymore, a {@link Deprecated} annotation can be placed
 * on the method. This will be picked up and shown in the API explorer.
 *
 * @see InternalService
 */
@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
public @interface PublicService {

    /**
     * Specifies the API to which this service belongs.
     * <p>
     * An API is a collection of services which are grouped together in the UI ({@link ApiController}). For each
     * API there has to be a block in the system config (see <tt>http.api</tt>).
     *
     * @return the name of the API to which this service belongs
     */
    String apiName();

    /**
     * Returns the sort priority in the API explorer.
     *
     * @return the sort priority of this service
     */
    int priority() default 100;

    /**
     * Specifies the response format being generated by this service
     *
     * @return the response format of this service
     */
    Format format() default Format.JSON;

    /**
     * Prevents calls to this service if set to <tt>true</tt> and the enclosing {@link sirius.web.security.ScopeInfo}
     * is {@link MaintenanceInfo#isLocked() locked} for maintenance.
     *
     * @return <tt>true</tt> if this service must not be called during maintenance, <tt>false</tt> otherwise
     */
    boolean enforceMaintenanceMode() default false;

    /**
     * May provide a link to a documentation page for this service.
     *
     * @return an URI which points to the documentation of this service (e.g. to a page within the Tycho knowledge base)
     */
    String documentationUri() default "";
}
